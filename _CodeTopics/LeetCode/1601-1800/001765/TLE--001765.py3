import collections
class Solution:
    def highestPeak(self, isWater: List[List[int]]) -> List[List[int]]:

        # 第一眼就知道肯定是 BFS，但是深入看了看发现好像一般的 BFS 不好搞，
        # 不知道是不是必须层序遍历。不管了，先写一个。
        # --> 写的过程中发现不是必须的，可以后面再写一个。

        # 主要思想就是以每一个水域为起点都进行 BFS，由于距离不同，
        # 同样坐标的点可能高度不一样，这时候取较小的高度值。

        m, n = len(isWater), len(isWater[0])
        res = [[-1 for j in range(n)] for i in range(m)]
        waterAreas = []
        for i in range(m):
            for j in range(n):
                if isWater[i][j] == 1:
                    res[i][j] = 0
                    waterAreas.append((i, j))
        
        directions = [[0,1],[0,-1],[1,0],[-1,0]]
        def is_legal_coor(x, y):
            return 0 <= x < m and 0 <= y < n

        for waterCoor in waterAreas:
            visited = set()
            q = [waterCoor]
            heightOfCurrLevel = 0
            while q:
                nextLevel = []
                for x, y in q:
                    ##print(x,y)
                    if (x, y) not in visited:
                        visited.add((x, y))
                    if res[x][y] == -1:
                        res[x][y] = heightOfCurrLevel
                    else:
                        res[x][y] = min(res[x][y], heightOfCurrLevel)
                    for d in directions:
                        nextx, nexty = x + d[0], y + d[1]
                        # 这里写得不好，最后一个判断条件是线性的，而不是常数的，说不定会导致超时。。。
                        # 但是这个省略了就会造成 nextLevel 里可能有重复的点——虽然不一定影响结果的正确性，
                        # 但从程序的角度肯定是不符合预期的。。。
                        if is_legal_coor(nextx, nexty) and (nextx, nexty) not in visited and (nextx, nexty) not in nextLevel:
                            nextLevel.append((nextx, nexty))
                q.clear()
                if nextLevel:
                    q = nextLevel[:]
                    heightOfCurrLevel += 1
                ##print(nextLevel)
        return res
        
"""
https://leetcode-cn.com/submissions/detail/263341725/

29 / 59 个通过测试用例
状态：超出时间限制

最后执行的输入：
[[1,1,0,1,1,0,0,1,1,1,1,1,0,1,1,0,1,1,1,1,0,0,0,1,1,1],[1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,0,1,1,1,1,1,1,0,0,1,1,0,1,1,1,1,1,1,1,1,1],[0,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,0,0,1],[1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1],[1,1,0,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0,1,0,1,1,1,1,1,1],[1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,0,1],[0,1,1,0,1,1,1,1,1,1,1,1,0,1,0,0,0,0,1,1,1,1,1,1,0,1],[1,1,0,1,1,1,1,0,1,1,1,0,1,1,0,0,1,0,1,1,1,0,1,0,1,1],[1,1,1,0,1,1,1,0,1,1,1,0,1,1,1,1,0,1,1,0,1,0,0,0,0,0],[1,1,1,0,1,0,0,1,0,1,1,1,0,0,1,1,1,1,0,1,1,0,1,1,1,0],[1,1,1,0,0,0,0,1,1,0,1,1,0,1,1,1,0,1,1,0,0,0,1,1,0,0],[1,1,0,1,0,1,1,0,1,1,0,1,0,1,1,0,1,1,0,0,0,1,0,0,1,1],[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1],[1,1,0,0,1,1,0,0,0,0,0,1,1,0,0,1,1,0,1,1,1,0,1,1,1,0],[1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,0,1],[1,0,1,1,1,1,1,0,0,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1],[0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0],[1,1,0,1,1,1,1,1,0,0,1,0,1,1,1,0,1,1,1,1,1,1,1,1,0,1],[1,0,1,1,1,1,1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,1,1],[0,1,1,1,1,0,1,0,1,1,0,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1],[1,0,1,1,1,1,0,1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,0,1,1],[1,1,1,1,0,0,0,1,1,1,1,1,0,1,1,1,1,1,0,1,0,1,1,0,1,1],[1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0,1,1,0,1,0,1,1,0,0,1],[0,0,0,0,1,0,1,0,1,0,1,1,1,0,1,1,1,1,1,1,0,0,1,1,0,0],[0,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1],[1,1,1,1,0,1,1,1,1,1,1,1,0,1,0,1,1,1,0,1,1,1,1,1,0,0],[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1],[1,0,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,0,1,1],[0,1,1,0,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1,1],[1,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1,0,0,1,1,0,0,1],[1,1,1,0,0,0,1,0,0,1,1,0,1,0,1,1,1,1,1,0,1,1,1,1,0,0],[1,1,0,1,1,0,0,1,0,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1],[0,0,0,1,0,1,1,1,1,0,1,0,1,1,0,1,1,0,1,1,0,1,1,1,1,1],[1,1,0,1,0,0,0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,0,0,1],[1,0,1,0,1,1,1,1,1,1,1,1,0,1,0,0,1,1,1,0,1,1,0,1,1,0],[1,0,0,1,1,1,1,1,1,1,1,0,1,0,0,1,0,1,0,1,0,1,1,1,1,0],[1,1,1,1,1,0,0,1,1,1,0,1,1,0,1,1,1,1,1,0,0,1,0,1,0,0],[1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1],[1,0,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,1,0,1,0,1,1,1,0,1],[1,0,0,0,0,1,0,1,0,1,1,1,1,0,1,1,1,1,1,0,1,0,1,0,1,0],[1,1,1,0,1,1,0,1,1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,1,1,1],[0,1,1,1,1,1,1,1,1,0,0,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,0,1,1,1,1,1,1],[1,0,1,0,1,1,0,1,1,1,1,1,1,1,0,0,0,1,1,0,1,1,1,1,0,1],[1,1,0,1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,0,0,1,1,1,0,1,0],[1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,0,0,0,1,1,1,1,1,0,1,1]]
"""
