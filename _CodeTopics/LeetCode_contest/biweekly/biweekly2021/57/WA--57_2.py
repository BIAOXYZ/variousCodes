class Solution(object):
    def smallestChair(self, times, targetFriend):
        """
        :type times: List[List[int]]
        :type targetFriend: int
        :rtype: int
        """
         
        n = len(times)
        dic = {tuple(times[i]):i for i in range(n)}
        times.sort(key = lambda x : x[0])
        
        seats = [float('inf') for _ in range(n)]
        # 第 0 个座位肯定被 0 个人占着，在他离开的时间才能释放。
        seats[0] = times[0][1]
        for i in range(1, n):
            arrival, leave = times[i][0], times[i][1]
            j = 0
            while arrival < seats[j] and seats[j] != float('inf'):
                j += 1
            if dic[tuple(times[i])] != targetFriend:
                seats[j] = leave
            else:
                return j
            
"""
https://leetcode-cn.com/submissions/detail/199426002/

43 / 60 个通过测试用例
状态：解答错误

最后执行的输入：
[[98198,99979],[94438,98042],[6104,64150],[15632,17378],[6923,88529],[68469,98315],[37973,86066],[90969,99746],[92396,96991],[53994,66509],[92972,97874],[70262,84374],[50387,64907],[99240,99985],[25642,56565],[7253,9683],[43669,68559],[60520,85461],[96567,97544],[64789,83994],[73723,84301],[55796,58566],[67943,78915],[92673,94868],[53570,58135],[69549,78461],[17694,75744],[9265,77868],[57880,89655],[23327,80521],[91232,91639],[91623,92961],[49501,88454],[88932,91622],[54965,59650],[46587,60025],[45140,98782],[47029,90516],[28112,29624],[73021,83152],[5377,19703],[70610,72191],[40633,66034],[87913,98864],[35913,50422],[39121,93376],[21100,79841],[8190,68139],[5140,54276],[22993,62342],[3491,8572],[70407,81025],[81198,96920],[29041,31796],[77060,81160],[94588,97686]]
50
输出：
null
预期：
0
"""
